service: lambda-service

# package:
#   patterns:
#     - "!node_modules/**"

custom:
  tableName: "device-table-2"

layers:
  test:
    path: layers/test
    description: "Test Layers within service"
  utils:
    path: layers/utils
    description: "Test shared functions"

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: ap-southeast-1
  environment:
    TABLE_NAME: ${self:custom.tableName}
    NODE_PATH: "./:/opt/node_modules"
  layers:
    # - arn:aws:lambda:ap-southeast-1:824918428471:layer:CommonLayer:5
    - !Ref TestLambdaLayer
    - !Ref UtilsLambdaLayer
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:DescribeTable
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - "Fn::GetAtt": [myTable, Arn]

functions:
  create:
    handler: src/functions/create.create
    name: service-create-device
    events:
      - httpApi:
          path: /api/devices
          method: post
  get:
    handler: src/functions/get.get
    name: service-get-device
    events:
      - httpApi:
          path: /api/devices/{id}
          method: get
  list:
    handler: src/functions/list.list
    name: service-list-device
    events:
      - httpApi:
          path: /api/devices
          method: get
resources:
  Resources:
    myTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
